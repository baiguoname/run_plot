{"message":"deref which would be done by auto-deref","code":{"code":"clippy::explicit_auto_deref","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/target.rs","byte_start":904,"byte_end":908,"line_start":27,"line_end":27,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"            Buffer::Borrowed(buf) => *buf,","highlight_start":38,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::explicit_auto_deref)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/target.rs","byte_start":904,"byte_end":908,"line_start":27,"line_end":27,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"            Buffer::Borrowed(buf) => *buf,","highlight_start":38,"highlight_end":42}],"label":null,"suggested_replacement":"buf","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: deref which would be done by auto-deref\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/target.rs:27:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Buffer::Borrowed(buf) => *buf,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `buf`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::explicit_auto_deref)]` on by default\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":1205,"byte_end":1234,"line_start":48,"line_end":48,"column_start":24,"column_end":53,"is_primary":true,"text":[{"text":"                buffer[(y * 10 + x) as usize * 3 + 0],","highlight_start":24,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::identity_op)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":1205,"byte_end":1234,"line_start":48,"line_end":48,"column_start":24,"column_end":53,"is_primary":true,"text":[{"text":"                buffer[(y * 10 + x) as usize * 3 + 0],","highlight_start":24,"highlight_end":53}],"label":null,"suggested_replacement":"(y * 10 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:48:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                buffer[(y * 10 + x) as usize * 3 + 0],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 10 + x) as usize * 3`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::identity_op)]` on by default\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":1834,"byte_end":1863,"line_start":69,"line_end":69,"column_start":24,"column_end":53,"is_primary":true,"text":[{"text":"                buffer[(y * 10 + x) as usize * 3 + 0],","highlight_start":24,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":1834,"byte_end":1863,"line_start":69,"line_end":69,"column_start":24,"column_end":53,"is_primary":true,"text":[{"text":"                buffer[(y * 10 + x) as usize * 3 + 0],","highlight_start":24,"highlight_end":53}],"label":null,"suggested_replacement":"(y * 10 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:69:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                buffer[(y * 10 + x) as usize * 3 + 0],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 10 + x) as usize * 3`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":2732,"byte_end":2761,"line_start":103,"line_end":103,"column_start":31,"column_end":60,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 10 + x) as usize * 3 + 0], r);","highlight_start":31,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":2732,"byte_end":2761,"line_start":103,"line_end":103,"column_start":31,"column_end":60,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 10 + x) as usize * 3 + 0], r);","highlight_start":31,"highlight_end":60}],"label":null,"suggested_replacement":"(y * 10 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:103:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(buffer[(y * 10 + x) as usize * 3 + 0], r);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 10 + x) as usize * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":3468,"byte_end":3497,"line_start":127,"line_end":127,"column_start":31,"column_end":60,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 10 + x) as usize * 3 + 0], r);","highlight_start":31,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":3468,"byte_end":3497,"line_start":127,"line_end":127,"column_start":31,"column_end":60,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 10 + x) as usize * 3 + 0], r);","highlight_start":31,"highlight_end":60}],"label":null,"suggested_replacement":"(y * 10 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:127:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(buffer[(y * 10 + x) as usize * 3 + 0], r);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 10 + x) as usize * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":4225,"byte_end":4256,"line_start":153,"line_end":153,"column_start":31,"column_end":62,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], 0);","highlight_start":31,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":4225,"byte_end":4256,"line_start":153,"line_end":153,"column_start":31,"column_end":62,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], 0);","highlight_start":31,"highlight_end":62}],"label":null,"suggested_replacement":"(y * 1000 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:153:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 1000 + x) as usize * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":5345,"byte_end":5376,"line_start":195,"line_end":195,"column_start":31,"column_end":62,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], expected_value);","highlight_start":31,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":5345,"byte_end":5376,"line_start":195,"line_end":195,"column_start":31,"column_end":62,"is_primary":true,"text":[{"text":"            assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], expected_value);","highlight_start":31,"highlight_end":62}],"label":null,"suggested_replacement":"(y * 1000 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:195:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], expected_value);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 1000 + x) as usize * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":6664,"byte_end":6695,"line_start":232,"line_end":232,"column_start":35,"column_end":66,"is_primary":true,"text":[{"text":"                assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], expected_value.0);","highlight_start":35,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":6664,"byte_end":6695,"line_start":232,"line_end":232,"column_start":35,"column_end":66,"is_primary":true,"text":[{"text":"                assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], expected_value.0);","highlight_start":35,"highlight_end":66}],"label":null,"suggested_replacement":"(y * 1000 + x) as usize * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:232:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                assert_eq!(buffer[(y * 1000 + x) as usize * 3 + 0], expected_value.0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `(y * 1000 + x) as usize * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":9143,"byte_end":9163,"line_start":313,"line_end":313,"column_start":29,"column_end":49,"is_primary":true,"text":[{"text":"                (rgb_buffer[y * 3000 + x * 3 + 0] as i32","highlight_start":29,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":9143,"byte_end":9163,"line_start":313,"line_end":313,"column_start":29,"column_end":49,"is_primary":true,"text":[{"text":"                (rgb_buffer[y * 3000 + x * 3 + 0] as i32","highlight_start":29,"highlight_end":49}],"label":null,"suggested_replacement":"y * 3000 + x * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:313:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                (rgb_buffer[y * 3000 + x * 3 + 0] as i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `y * 3000 + x * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":9624,"byte_end":9644,"line_start":326,"line_end":326,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                    - bgrx_buffer[y * 4000 + x * 4 + 0] as i32)","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":9624,"byte_end":9644,"line_start":326,"line_end":326,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                    - bgrx_buffer[y * 4000 + x * 4 + 0] as i32)","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":"y * 4000 + x * 4","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:326:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    - bgrx_buffer[y * 4000 + x * 4 + 0] as i32)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `y * 4000 + x * 4`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"called `map(..).flatten()` on `Iterator`","code":{"code":"clippy::map_flatten","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10265,"byte_end":10337,"line_start":354,"line_end":355,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"        .map(|y| (0..300).map(move |x| ((x * y) % 253) as u8))","highlight_start":10,"highlight_end":63},{"text":"        .flatten()","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::map_flatten)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try replacing `map` with `flat_map` and remove the `.flatten()`","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10265,"byte_end":10337,"line_start":354,"line_end":355,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"        .map(|y| (0..300).map(move |x| ((x * y) % 253) as u8))","highlight_start":10,"highlight_end":63},{"text":"        .flatten()","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"flat_map(|y| (0..300).map(move |x| ((x * y) % 253) as u8))","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `map(..).flatten()` on `Iterator`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:354:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        .map(|y| (0..300).map(move |x| ((x * y) % 253) as u8))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .flatten()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|__________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try replacing `map` with `flat_map` and remove the `.flatten()`: `flat_map(|y| (0..300).map(move |x| ((x * y) % 253) as u8))`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::map_flatten)]` on by default\u001b[0m\n\n"}
{"message":"manual `Range::contains` implementation","code":{"code":"clippy::manual_range_contains","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10705,"byte_end":10724,"line_start":369,"line_end":369,"column_start":39,"column_end":58,"is_primary":true,"text":[{"text":"            if x >= 500 && x < 600 && y >= 500 && y < 600 {","highlight_start":39,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::manual_range_contains)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10705,"byte_end":10724,"line_start":369,"line_end":369,"column_start":39,"column_end":58,"is_primary":true,"text":[{"text":"            if x >= 500 && x < 600 && y >= 500 && y < 600 {","highlight_start":39,"highlight_end":58}],"label":null,"suggested_replacement":"(500..600).contains(&y)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual `Range::contains` implementation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:369:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if x >= 500 && x < 600 && y >= 500 && y < 600 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use: `(500..600).contains(&y)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::manual_range_contains)]` on by default\u001b[0m\n\n"}
{"message":"manual `Range::contains` implementation","code":{"code":"clippy::manual_range_contains","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10682,"byte_end":10701,"line_start":369,"line_end":369,"column_start":16,"column_end":35,"is_primary":true,"text":[{"text":"            if x >= 500 && x < 600 && y >= 500 && y < 600 {","highlight_start":16,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"use","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10682,"byte_end":10701,"line_start":369,"line_end":369,"column_start":16,"column_end":35,"is_primary":true,"text":[{"text":"            if x >= 500 && x < 600 && y >= 500 && y < 600 {","highlight_start":16,"highlight_end":35}],"label":null,"suggested_replacement":"(500..600).contains(&x)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual `Range::contains` implementation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:369:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if x >= 500 && x < 600 && y >= 500 && y < 600 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use: `(500..600).contains(&x)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10829,"byte_end":10849,"line_start":372,"line_end":372,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                assert_eq!(buffer[y * 3000 + x * 3 + 0] as usize, (ly * lx * 3) % 253);","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":10829,"byte_end":10849,"line_start":372,"line_end":372,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                assert_eq!(buffer[y * 3000 + x * 3 + 0] as usize, (ly * lx * 3) % 253);","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":"y * 3000 + x * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:372:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                assert_eq!(buffer[y * 3000 + x * 3 + 0] as usize, (ly * lx * 3) % 253);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `y * 3000 + x * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"this operation has no effect","code":{"code":"clippy::identity_op","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":11242,"byte_end":11262,"line_start":382,"line_end":382,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                assert_eq!(buffer[y * 3000 + x * 3 + 0], 0);","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider reducing it to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":11242,"byte_end":11262,"line_start":382,"line_end":382,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                assert_eq!(buffer[y * 3000 + x * 3 + 0], 0);","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":"y * 3000 + x * 3","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this operation has no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:382:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                assert_eq!(buffer[y * 3000 + x * 3 + 0], 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider reducing it to: `y * 3000 + x * 3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\u001b[0m\n\n"}
{"message":"module has the same name as its containing module","code":{"code":"clippy::module_inception","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":11497,"byte_end":19793,"line_start":392,"line_end":614,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"mod test {","highlight_start":1,"highlight_end":11},{"text":"    use crate::BitMapBackend;","highlight_start":1,"highlight_end":30},{"text":"    use image::{ImageBuffer, Rgb};","highlight_start":1,"highlight_end":35},{"text":"    use plotters::prelude::*;","highlight_start":1,"highlight_end":30},{"text":"    use plotters::style::text_anchor::{HPos, Pos, VPos};","highlight_start":1,"highlight_end":57},{"text":"    use std::fs;","highlight_start":1,"highlight_end":17},{"text":"    use std::path::Path;","highlight_start":1,"highlight_end":25},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static DST_DIR: &str = \"target/test/bitmap\";","highlight_start":1,"highlight_end":49},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    fn checked_save_file(name: &str, content: &[u8], w: u32, h: u32) {","highlight_start":1,"highlight_end":71},{"text":"        /*","highlight_start":1,"highlight_end":11},{"text":"          Please use the PNG file to manually verify the results.","highlight_start":1,"highlight_end":66},{"text":"        */","highlight_start":1,"highlight_end":11},{"text":"        assert!(content.iter().any(|x| *x != 0));","highlight_start":1,"highlight_end":50},{"text":"        fs::create_dir_all(DST_DIR).unwrap();","highlight_start":1,"highlight_end":46},{"text":"        let file_name = format!(\"{}.png\", name);","highlight_start":1,"highlight_end":49},{"text":"        let file_path = Path::new(DST_DIR).join(file_name);","highlight_start":1,"highlight_end":60},{"text":"        println!(\"{:?} created\", file_path);","highlight_start":1,"highlight_end":45},{"text":"        let img = ImageBuffer::<Rgb<u8>, &[u8]>::from_raw(w, h, content).unwrap();","highlight_start":1,"highlight_end":83},{"text":"        img.save(&file_path).unwrap();","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    fn draw_mesh_with_custom_ticks(tick_size: i32, test_name: &str) {","highlight_start":1,"highlight_end":70},{"text":"        let (width, height) = (500, 500);","highlight_start":1,"highlight_end":42},{"text":"        let mut buffer = vec![0; (width * height * 3) as usize];","highlight_start":1,"highlight_end":65},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            let root = BitMapBackend::with_buffer(&mut buffer, (width, height)).into_drawing_area();","highlight_start":1,"highlight_end":101},{"text":"            root.fill(&WHITE).unwrap();","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut chart = ChartBuilder::on(&root)","highlight_start":1,"highlight_end":52},{"text":"                .caption(\"This is a test\", (\"sans-serif\", 20))","highlight_start":1,"highlight_end":63},{"text":"                .set_all_label_area_size(40)","highlight_start":1,"highlight_end":45},{"text":"                .build_cartesian_2d(0..10, 0..10)","highlight_start":1,"highlight_end":50},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            chart","highlight_start":1,"highlight_end":18},{"text":"                .configure_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .set_all_tick_mark_size(tick_size)","highlight_start":1,"highlight_end":51},{"text":"                .draw()","highlight_start":1,"highlight_end":24},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        checked_save_file(test_name, &buffer, width, height);","highlight_start":1,"highlight_end":62},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn test_draw_mesh_no_ticks() {","highlight_start":1,"highlight_end":35},{"text":"        draw_mesh_with_custom_ticks(0, \"test_draw_mesh_no_ticks\");","highlight_start":1,"highlight_end":67},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn test_draw_mesh_negative_ticks() {","highlight_start":1,"highlight_end":41},{"text":"        draw_mesh_with_custom_ticks(-10, \"test_draw_mesh_negative_ticks\");","highlight_start":1,"highlight_end":75},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn test_text_draw() {","highlight_start":1,"highlight_end":26},{"text":"        let (width, height) = (1500, 800);","highlight_start":1,"highlight_end":43},{"text":"        let mut buffer = vec![0; (width * height * 3) as usize];","highlight_start":1,"highlight_end":65},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            let root = BitMapBackend::with_buffer(&mut buffer, (width, height)).into_drawing_area();","highlight_start":1,"highlight_end":101},{"text":"            root.fill(&WHITE).unwrap();","highlight_start":1,"highlight_end":40},{"text":"            let root = root","highlight_start":1,"highlight_end":28},{"text":"                .titled(\"Image Title\", (\"sans-serif\", 60).into_font())","highlight_start":1,"highlight_end":71},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut chart = ChartBuilder::on(&root)","highlight_start":1,"highlight_end":52},{"text":"                .caption(\"All anchor point positions\", (\"sans-serif\", 20))","highlight_start":1,"highlight_end":75},{"text":"                .set_all_label_area_size(40)","highlight_start":1,"highlight_end":45},{"text":"                .build_cartesian_2d(0..100, 0..50)","highlight_start":1,"highlight_end":51},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            chart","highlight_start":1,"highlight_end":18},{"text":"                .configure_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .disable_x_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .disable_y_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .x_desc(\"X Axis\")","highlight_start":1,"highlight_end":34},{"text":"                .y_desc(\"Y Axis\")","highlight_start":1,"highlight_end":34},{"text":"                .draw()","highlight_start":1,"highlight_end":24},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let ((x1, y1), (x2, y2), (x3, y3)) = ((-30, 30), (0, -30), (30, 30));","highlight_start":1,"highlight_end":82},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            for (dy, trans) in [","highlight_start":1,"highlight_end":33},{"text":"                FontTransform::None,","highlight_start":1,"highlight_end":37},{"text":"                FontTransform::Rotate90,","highlight_start":1,"highlight_end":41},{"text":"                FontTransform::Rotate180,","highlight_start":1,"highlight_end":42},{"text":"                FontTransform::Rotate270,","highlight_start":1,"highlight_end":42},{"text":"            ]","highlight_start":1,"highlight_end":14},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .enumerate()","highlight_start":1,"highlight_end":25},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                for (dx1, h_pos) in [HPos::Left, HPos::Right, HPos::Center].iter().enumerate() {","highlight_start":1,"highlight_end":97},{"text":"                    for (dx2, v_pos) in [VPos::Top, VPos::Center, VPos::Bottom].iter().enumerate() {","highlight_start":1,"highlight_end":101},{"text":"                        let x = 150_i32 + (dx1 as i32 * 3 + dx2 as i32) * 150;","highlight_start":1,"highlight_end":79},{"text":"                        let y = 120 + dy as i32 * 150;","highlight_start":1,"highlight_end":55},{"text":"                        let draw = |x, y, text| {","highlight_start":1,"highlight_end":50},{"text":"                            root.draw(&Circle::new((x, y), 3, &BLACK.mix(0.5))).unwrap();","highlight_start":1,"highlight_end":90},{"text":"                            let style = TextStyle::from((\"sans-serif\", 20).into_font())","highlight_start":1,"highlight_end":88},{"text":"                                .pos(Pos::new(*h_pos, *v_pos))","highlight_start":1,"highlight_end":63},{"text":"                                .transform(trans.clone());","highlight_start":1,"highlight_end":59},{"text":"                            root.draw_text(text, &style, (x, y)).unwrap();","highlight_start":1,"highlight_end":75},{"text":"                        };","highlight_start":1,"highlight_end":27},{"text":"                        draw(x + x1, y + y1, \"dood\");","highlight_start":1,"highlight_end":54},{"text":"                        draw(x + x2, y + y2, \"dog\");","highlight_start":1,"highlight_end":53},{"text":"                        draw(x + x3, y + y3, \"goog\");","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        checked_save_file(\"test_text_draw\", &buffer, width, height);","highlight_start":1,"highlight_end":69},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn test_text_clipping() {","highlight_start":1,"highlight_end":30},{"text":"        let (width, height) = (500_i32, 500_i32);","highlight_start":1,"highlight_end":50},{"text":"        let mut buffer = vec![0; (width * height * 3) as usize];","highlight_start":1,"highlight_end":65},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            let root = BitMapBackend::with_buffer(&mut buffer, (width as u32, height as u32))","highlight_start":1,"highlight_end":94},{"text":"                .into_drawing_area();","highlight_start":1,"highlight_end":38},{"text":"            root.fill(&WHITE).unwrap();","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let style = TextStyle::from((\"sans-serif\", 20).into_font())","highlight_start":1,"highlight_end":72},{"text":"                .pos(Pos::new(HPos::Center, VPos::Center));","highlight_start":1,"highlight_end":60},{"text":"            root.draw_text(\"TOP LEFT\", &style, (0, 0)).unwrap();","highlight_start":1,"highlight_end":65},{"text":"            root.draw_text(\"TOP CENTER\", &style, (width / 2, 0))","highlight_start":1,"highlight_end":65},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"            root.draw_text(\"TOP RIGHT\", &style, (width, 0)).unwrap();","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            root.draw_text(\"MIDDLE LEFT\", &style, (0, height / 2))","highlight_start":1,"highlight_end":67},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"            root.draw_text(\"MIDDLE RIGHT\", &style, (width, height / 2))","highlight_start":1,"highlight_end":72},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            root.draw_text(\"BOTTOM LEFT\", &style, (0, height)).unwrap();","highlight_start":1,"highlight_end":73},{"text":"            root.draw_text(\"BOTTOM CENTER\", &style, (width / 2, height))","highlight_start":1,"highlight_end":73},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"            root.draw_text(\"BOTTOM RIGHT\", &style, (width, height))","highlight_start":1,"highlight_end":68},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        checked_save_file(\"test_text_clipping\", &buffer, width as u32, height as u32);","highlight_start":1,"highlight_end":87},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn test_series_labels() {","highlight_start":1,"highlight_end":30},{"text":"        let (width, height) = (500, 500);","highlight_start":1,"highlight_end":42},{"text":"        let mut buffer = vec![0; (width * height * 3) as usize];","highlight_start":1,"highlight_end":65},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            let root = BitMapBackend::with_buffer(&mut buffer, (width, height)).into_drawing_area();","highlight_start":1,"highlight_end":101},{"text":"            root.fill(&WHITE).unwrap();","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut chart = ChartBuilder::on(&root)","highlight_start":1,"highlight_end":52},{"text":"                .caption(\"All series label positions\", (\"sans-serif\", 20))","highlight_start":1,"highlight_end":75},{"text":"                .set_all_label_area_size(40)","highlight_start":1,"highlight_end":45},{"text":"                .build_cartesian_2d(0..50, 0..50)","highlight_start":1,"highlight_end":50},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            chart","highlight_start":1,"highlight_end":18},{"text":"                .configure_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .disable_x_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .disable_y_mesh()","highlight_start":1,"highlight_end":34},{"text":"                .draw()","highlight_start":1,"highlight_end":24},{"text":"                .unwrap();","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            chart","highlight_start":1,"highlight_end":18},{"text":"                .draw_series(std::iter::once(Circle::new((5, 15), 5, &RED)))","highlight_start":1,"highlight_end":77},{"text":"                .expect(\"Drawing error\")","highlight_start":1,"highlight_end":41},{"text":"                .label(\"Series 1\")","highlight_start":1,"highlight_end":35},{"text":"                .legend(|(x, y)| Circle::new((x, y), 3, RED.filled()));","highlight_start":1,"highlight_end":72},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            chart","highlight_start":1,"highlight_end":18},{"text":"                .draw_series(std::iter::once(Circle::new((5, 15), 10, &BLUE)))","highlight_start":1,"highlight_end":79},{"text":"                .expect(\"Drawing error\")","highlight_start":1,"highlight_end":41},{"text":"                .label(\"Series 2\")","highlight_start":1,"highlight_end":35},{"text":"                .legend(|(x, y)| Circle::new((x, y), 3, BLUE.filled()));","highlight_start":1,"highlight_end":73},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            for pos in vec![","highlight_start":1,"highlight_end":29},{"text":"                SeriesLabelPosition::UpperLeft,","highlight_start":1,"highlight_end":48},{"text":"                SeriesLabelPosition::MiddleLeft,","highlight_start":1,"highlight_end":49},{"text":"                SeriesLabelPosition::LowerLeft,","highlight_start":1,"highlight_end":48},{"text":"                SeriesLabelPosition::UpperMiddle,","highlight_start":1,"highlight_end":50},{"text":"                SeriesLabelPosition::MiddleMiddle,","highlight_start":1,"highlight_end":51},{"text":"                SeriesLabelPosition::LowerMiddle,","highlight_start":1,"highlight_end":50},{"text":"                SeriesLabelPosition::UpperRight,","highlight_start":1,"highlight_end":49},{"text":"                SeriesLabelPosition::MiddleRight,","highlight_start":1,"highlight_end":50},{"text":"                SeriesLabelPosition::LowerRight,","highlight_start":1,"highlight_end":49},{"text":"                SeriesLabelPosition::Coordinate(70, 70),","highlight_start":1,"highlight_end":57},{"text":"            ]","highlight_start":1,"highlight_end":14},{"text":"            .into_iter()","highlight_start":1,"highlight_end":25},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                chart","highlight_start":1,"highlight_end":22},{"text":"                    .configure_series_labels()","highlight_start":1,"highlight_end":47},{"text":"                    .border_style(&BLACK.mix(0.5))","highlight_start":1,"highlight_end":51},{"text":"                    .position(pos)","highlight_start":1,"highlight_end":35},{"text":"                    .draw()","highlight_start":1,"highlight_end":28},{"text":"                    .expect(\"Drawing error\");","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        checked_save_file(\"test_series_labels\", &buffer, width, height);","highlight_start":1,"highlight_end":73},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn test_draw_pixel_alphas() {","highlight_start":1,"highlight_end":34},{"text":"        let (width, height) = (100_i32, 100_i32);","highlight_start":1,"highlight_end":50},{"text":"        let mut buffer = vec![0; (width * height * 3) as usize];","highlight_start":1,"highlight_end":65},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            let root = BitMapBackend::with_buffer(&mut buffer, (width as u32, height as u32))","highlight_start":1,"highlight_end":94},{"text":"                .into_drawing_area();","highlight_start":1,"highlight_end":38},{"text":"            root.fill(&WHITE).unwrap();","highlight_start":1,"highlight_end":40},{"text":"            for i in -20..20 {","highlight_start":1,"highlight_end":31},{"text":"                let alpha = i as f64 * 0.1;","highlight_start":1,"highlight_end":44},{"text":"                root.draw_pixel((50 + i, 50 + i), &BLACK.mix(alpha))","highlight_start":1,"highlight_end":69},{"text":"                    .unwrap();","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        checked_save_file(","highlight_start":1,"highlight_end":27},{"text":"            \"test_draw_pixel_alphas\",","highlight_start":1,"highlight_end":38},{"text":"            &buffer,","highlight_start":1,"highlight_end":21},{"text":"            width as u32,","highlight_start":1,"highlight_end":26},{"text":"            height as u32,","highlight_start":1,"highlight_end":27},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::module_inception)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module has the same name as its containing module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:392:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod test {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::BitMapBackend;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use image::{ImageBuffer, Rgb};\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use plotters::prelude::*;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m613\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m614\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::module_inception)]` on by default\u001b[0m\n\n"}
{"message":"the borrowed expression implements the required traits","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":15057,"byte_end":15072,"line_start":489,"line_end":489,"column_start":63,"column_end":78,"is_primary":true,"text":[{"text":"                            root.draw(&Circle::new((x, y), 3, &BLACK.mix(0.5))).unwrap();","highlight_start":63,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_borrow)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":15057,"byte_end":15072,"line_start":489,"line_end":489,"column_start":63,"column_end":78,"is_primary":true,"text":[{"text":"                            root.draw(&Circle::new((x, y), 3, &BLACK.mix(0.5))).unwrap();","highlight_start":63,"highlight_end":78}],"label":null,"suggested_replacement":"BLACK.mix(0.5)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the borrowed expression implements the required traits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:489:63\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m489\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   root.draw(&Circle::new((x, y), 3, &BLACK.mix(0.5))).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `BLACK.mix(0.5)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_borrow)]` on by default\u001b[0m\n\n"}
{"message":"the borrowed expression implements the required traits","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":17774,"byte_end":17778,"line_start":557,"line_end":557,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"                .draw_series(std::iter::once(Circle::new((5, 15), 5, &RED)))","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":17774,"byte_end":17778,"line_start":557,"line_end":557,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"                .draw_series(std::iter::once(Circle::new((5, 15), 5, &RED)))","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":"RED","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the borrowed expression implements the required traits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:557:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m557\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .draw_series(std::iter::once(Circle::new((5, 15), 5, &RED)))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `RED`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"message":"the borrowed expression implements the required traits","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":18019,"byte_end":18024,"line_start":563,"line_end":563,"column_start":71,"column_end":76,"is_primary":true,"text":[{"text":"                .draw_series(std::iter::once(Circle::new((5, 15), 10, &BLUE)))","highlight_start":71,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":18019,"byte_end":18024,"line_start":563,"line_end":563,"column_start":71,"column_end":76,"is_primary":true,"text":[{"text":"                .draw_series(std::iter::once(Circle::new((5, 15), 10, &BLUE)))","highlight_start":71,"highlight_end":76}],"label":null,"suggested_replacement":"BLUE","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the borrowed expression implements the required traits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:563:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m563\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .draw_series(std::iter::once(Circle::new((5, 15), 10, &BLUE)))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `BLUE`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"message":"the borrowed expression implements the required traits","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":18864,"byte_end":18879,"line_start":584,"line_end":584,"column_start":35,"column_end":50,"is_primary":true,"text":[{"text":"                    .border_style(&BLACK.mix(0.5))","highlight_start":35,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"plotters/plotters-bitmap/src/bitmap/test.rs","byte_start":18864,"byte_end":18879,"line_start":584,"line_end":584,"column_start":35,"column_end":50,"is_primary":true,"text":[{"text":"                    .border_style(&BLACK.mix(0.5))","highlight_start":35,"highlight_end":50}],"label":null,"suggested_replacement":"BLACK.mix(0.5)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the borrowed expression implements the required traits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mplotters/plotters-bitmap/src/bitmap/test.rs:584:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    .border_style(&BLACK.mix(0.5))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `BLACK.mix(0.5)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"message":"20 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 20 warnings emitted\u001b[0m\n\n"}
